name: "Upload deb to S3"

inputs:
  run_id:
    description: "Run ID to download artifacts from"
    required: true
  APT_SIGNING_KEY:
    description: "APT Signing key"
    required: true
  AWS_ACCESS_KEY_ID:
    description: "AWS Access Key ID"
    required: true
  AWS_SECRET_ACCESS_KEY:
    description: "AWS Secret Access Key"
    required: true
  APT_S3_BUCKET:
    description: "S3 bucket to upload to"
    required: true
  APT_S3_REGION:
    description: "S3 region to upload to"
    required: true
  DEB_S3_VERSION:
    description: "deb-s3 version to use"
    default: "0.11.3"

runs:
  using: "composite"
  steps:
  - name: Setup APT Signing key
    shell: bash
    run: |
        mkdir -m 0700 -p ~/.gnupg
        echo "$APT_SIGNING_KEY" | gpg --import
    env:
      APT_SIGNING_KEY: ${{ inputs.APT_SIGNING_KEY }}
  - name: Get binary packages
    uses: actions/download-artifact@v4
    with:
      run-id: ${{ inputs.run_id }}
  - name: Setup ruby
    uses: ruby/setup-ruby@v1
    with:
        ruby-version: "2.7"
  - name: Install deb-s3
    shell: bash
    run: |
        curl -sLO https://github.com/deb-s3/deb-s3/releases/download/${{ inputs.DEB_S3_VERSION }}/deb-s3-${{ env.DEB_S3_VERSION }}.gem
        gem install deb-s3-${{ inputs.DEB_S3_VERSION }}.gem
  - name: Upload packages
    shell: bash
    run: |
      # Quick hack to deal with duplicate _all packages
      rm -f binary-*-i386/*_all.deb
      for dir in binary-*; do \
          dist=$(echo $dir | cut -d- -f 2) ; \
          deb-s3 upload \
              --bucket ${{ env.APT_S3_BUCKET }} \
              --s3-region ${{ env.APT_S3_REGION }} \
              --codename $dist \
              --suite $dist \
              --origin packages.redis.io \
              --preserve-versions \
              --lock \
              --fail-if-exists \
              --sign \
              --prefix deb \
              $dir/*.deb ; \
      done
    env:
      AWS_ACCESS_KEY_ID: ${{ inputs.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
      APT_S3_BUCKET: ${{ inputs.APT_S3_BUCKET }}
      APT_S3_REGION: ${{ inputs.APT_S3_REGION }}
