#!/usr/bin/make -f

include /usr/share/dpkg/architecture.mk
include /usr/share/dpkg/buildflags.mk

ifneq ($(DEB_HOST_GNU_TYPE),)
CC = $(DEB_HOST_GNU_TYPE)-gcc
endif

export CC CFLAGS CPPFLAGS LDFLAGS
export DEB_BUILD_MAINT_OPTIONS = hardening=+all,-format
export DEB_LDFLAGS_MAINT_APPEND = -ldl -latomic
export REDIS_CFLAGS='-Wno-error=uninitialized'
DEB_BUILD_OPTIONS = nocheck

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	MAKEFLAGS += -j$(NUMJOBS)
	export MAKEFLAGS
endif

%:
	dh $@

# BUILD_WITH_MODULES is needed by override_dh_auto_build as well as override_dh_auto_install,
# so we export it here instead of passing it to override_dh_auto_build

ARCH := $(shell dpkg --print-architecture)
$(info Host Architecture: $(ARCH))
TARGET_ARCH := $(DEB_HOST_ARCH)
$(info Target Architecture: $(TARGET_ARCH))

# Use TARGET_ARCH if we're in a cross-compilation environment
ifneq ($(ARCH),$(TARGET_ARCH))
    $(info Cross-compilation detected: $(ARCH) -> $(TARGET_ARCH))
    ARCH := $(TARGET_ARCH)
endif

ifeq ($(ARCH), amd64)
	export BUILD_WITH_MODULES=yes
	export DISABLE_WERRORS=yes
	export INSTALL_RUST_TOOLCHAIN=yes
else ifeq ($(ARCH), arm64)
	export BUILD_WITH_MODULES=yes
	export INSTALL_RUST_TOOLCHAIN=yes
else ifeq ($(ARCH), i686)
	export BUILD_WITH_MODULES=no
	export INSTALL_RUST_TOOLCHAIN=no
else ifeq ($(ARCH), i386)
	export BUILD_WITH_MODULES=no
	export INSTALL_RUST_TOOLCHAIN=no
else ifeq ($(ARCH), armhf)
	export BUILD_WITH_MODULES=no
	export INSTALL_RUST_TOOLCHAIN=no
	export AR = arm-linux-gnueabihf-ar
else
    $(warning Unsupported architecture: '$(ARCH)')
endif

override_dh_auto_install:
	debian/bin/generate-systemd-service-files
	cp debian/conf-dist/sentinel.conf ./sentinel.conf
	if [ "$(BUILD_WITH_MODULES)" = "yes" ]; then \
		cp debian/conf-dist/redis_with_modules.conf ./redis.conf; \
	else \
		sed -i '/usr\/local\/lib\/redis\/modules\/\*\.so/d' debian/redis-server.install; \
		cp debian/conf-dist/redis.conf ./redis.conf; \
	fi
	dh_auto_install

override_dh_auto_build:
	dh_auto_build --parallel -- V=1 BUILD_TLS=yes IGNORE_MISSING_DEPS=1

override_dh_auto_test:
ifeq (,$(filter nocheck,$(DEB_BUILD_OPTIONS)))
	# Avoid race conditions in upstream testsuite.
	./utils/gen-test-certs.sh
	./runtest --clients 1 --verbose --no-latency \
		--skiptest "diskless no replicas drop during rdb pipe" \
		--skiptest "diskless slow replicas drop during rdb pipe" \
		--skiptest "diskless fast replicas drop during rdb pipe" \
		--skiptest "diskless all replicas drop during rdb pipe"
	./runtest --clients 1 --tls --verbose --no-latency \
		--skiptest "diskless no replicas drop during rdb pipe" \
		--skiptest "diskless slow replicas drop during rdb pipe" \
		--skiptest "diskless fast replicas drop during rdb pipe" \
		--skiptest "diskless all replicas drop during rdb pipe"
	#./runtest-cluster --tls
	#./runtest-sentinel --tls
endif

override_dh_auto_clean:
	dh_auto_clean
	rm -f src/release.h debian/*.service
	rm -rf utils/tests
	rm -rf tests/tls
	rm -f tests/tmp/*

override_dh_compress:
	dh_compress -Xredis-trib.rb

override_dh_installchangelogs:
	dh_installchangelogs --keep 00-RELEASENOTES

override_dh_fixperms:
	# Do not allow dh_fixperms to "fix" modules so files perms as
	# it removes their x bit
	dh_fixperms -X/redis/modules
